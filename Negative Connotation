/*


You will be given a string with sets of characters, (i.e. words), seperated by between one and four spaces (inclusive).

Looking at the first letter of each word (case insensitive-"A" and "a" should be treated the same), you need to determine whether it falls into the positive/first half of the alphabet ("a"-"m") or the negative/second half ("n"-"z").

Return True/true if there are more (or equal) positive words than negative words, False/false otherwise.

"A big brown fox caught a bad rabbit" => True/true
"Xylophones can obtain Xenon." => False/false


*/


function connotation(str) {
  let positive = str.match(/\b[a-m]/ig) || []
  let negative = str.match(/\b[n-z]/ig) || []
  return positive.length >= negative.length
}





//Alternative way
function connotation(str) {
  let positive = 0, negative = 0;
  const words = str.toLowerCase().split(/\s+/).filter(word => word !== '')

  for(let i = 0; i < words.length; i++){
   
    if(words[i][0] >= 'a' && words[i][0] <= 'm'){
      positive++;
    } else {
      negative++;
    }
  }
  return negative <= positive;
}
